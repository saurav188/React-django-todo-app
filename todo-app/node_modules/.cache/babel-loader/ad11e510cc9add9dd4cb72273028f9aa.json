{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Saurav\\\\Desktop\\\\git projects\\\\React-django-todo-app\\\\todo_project\\\\todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import Fetcher from'../hooks/Fetcher';function EachTask(props){var id=props.id;var url='http://localhost:8000/api/get_task/'+id;var _Fetcher=Fetcher(url),_Fetcher2=_slicedToArray(_Fetcher,2),response=_Fetcher2[0],responseChanger=_Fetcher2[1];var task=response;function EditCompletedStatus(){responseChanger({\"id\":task.id,\"title\":task.title,\"completed\":!task.completed});fetch(\"http://localhost:8000/api/edit_task/\".concat(id),{method:'PUT',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"id\":task.id,\"title\":task.title,\"completed\":!task.completed})});};var completed_status;if(task.completed){completed_status=/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:true,onInput:EditCompletedStatus});}else{completed_status=/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",unchecked:String(task.completed),onInput:EditCompletedStatus});};return/*#__PURE__*/React.createElement(\"div\",{key:task.id,className:\"task\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:task.title,onChange:function onChange(e){responseChanger({\"id\":task.id,\"title\":e.target.value,\"completed\":task.completed});}}),/*#__PURE__*/React.createElement(\"input\",{type:\"button\",value:\"edit\",onClick:function onClick(){fetch(\"http://localhost:8000/api/edit_task/\".concat(id),{method:'PUT',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(task)});}}),completed_status);};export default EachTask;","map":{"version":3,"sources":["C:/Users/Saurav/Desktop/git projects/React-django-todo-app/todo_project/todo-app/src/components/EachTask.js"],"names":["React","Fetcher","EachTask","props","id","url","response","responseChanger","task","EditCompletedStatus","title","completed","fetch","method","headers","body","JSON","stringify","completed_status","String","e","target","value"],"mappings":"mNAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAwB,CACpB,GAAMC,CAAAA,EAAE,CAACD,KAAK,CAACC,EAAf,CACA,GAAMC,CAAAA,GAAG,CAAC,sCAAsCD,EAAhD,CAFoB,aAGWH,OAAO,CAACI,GAAD,CAHlB,sCAGfC,QAHe,cAGNC,eAHM,cAIpB,GAAIC,CAAAA,IAAI,CAACF,QAAT,CACA,QAASG,CAAAA,mBAAT,EAA8B,CAC1BF,eAAe,CAAC,CACZ,KAAKC,IAAI,CAACJ,EADE,CAEZ,QAAQI,IAAI,CAACE,KAFD,CAGZ,YAAY,CAACF,IAAI,CAACG,SAHN,CAAD,CAAf,CAKAC,KAAK,+CAAwCR,EAAxC,EAA8C,CAC/CS,MAAM,CAAE,KADuC,CAE/CC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFsC,CAM/CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjB,KAAKT,IAAI,CAACJ,EADO,CAEjB,QAAQI,IAAI,CAACE,KAFI,CAGjB,YAAY,CAACF,IAAI,CAACG,SAHD,CAAf,CANyC,CAA9C,CAAL,CAYH,EACD,GAAIO,CAAAA,gBAAJ,CACA,GAAGV,IAAI,CAACG,SAAR,CAAkB,CACdO,gBAAgB,cAAC,6BAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,KAA9B,CAA+B,OAAO,CAAET,mBAAxC,EAAjB,CACH,CAFD,IAEK,CACDS,gBAAgB,cAAC,6BAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAEC,MAAM,CAACX,IAAI,CAACG,SAAN,CAAxC,CAA0D,OAAO,CAAEF,mBAAnE,EAAjB,CACH,EACD,mBACI,2BAAM,GAAG,CAAED,IAAI,CAACJ,EAAhB,CAAoB,SAAS,CAAC,MAA9B,eACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEI,IAAI,CAACE,KAA/B,CAAsC,QAAQ,CAAE,kBAACU,CAAD,CAAK,CACjDb,eAAe,CAAC,CACZ,KAAKC,IAAI,CAACJ,EADE,CAEZ,QAAQgB,CAAC,CAACC,MAAF,CAASC,KAFL,CAGZ,YAAYd,IAAI,CAACG,SAHL,CAAD,CAAf,CAKH,CAND,EADJ,cAQI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,MAA3B,CAAkC,OAAO,CAAE,kBAAI,CAC3CC,KAAK,+CAAwCR,EAAxC,EAA8C,CAC/CS,MAAM,CAAE,KADuC,CAE/CC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFsC,CAM/CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CANyC,CAA9C,CAAL,CAQH,CATD,EARJ,CAkBKU,gBAlBL,CADJ,CAsBH,EAED,cAAehB,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport Fetcher from '../hooks/Fetcher';\r\n\r\nfunction EachTask(props){\r\n    const id=props.id;\r\n    const url='http://localhost:8000/api/get_task/'+id;\r\n    let [response,responseChanger]=Fetcher(url);\r\n    let task=response;\r\n    function EditCompletedStatus(){\r\n        responseChanger({\r\n            \"id\":task.id,\r\n            \"title\":task.title,\r\n            \"completed\":!task.completed\r\n        });\r\n        fetch(`http://localhost:8000/api/edit_task/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\":task.id,\r\n                \"title\":task.title,\r\n                \"completed\":!task.completed\r\n            })\r\n        });\r\n    };\r\n    let completed_status;\r\n    if(task.completed){\r\n        completed_status=<input type=\"checkbox\" checked onInput={EditCompletedStatus}></input>\r\n    }else{\r\n        completed_status=<input type=\"checkbox\" unchecked={String(task.completed)} onInput={EditCompletedStatus}></input>\r\n    };\r\n    return (\r\n        <div  key={task.id} className=\"task\">\r\n            <input type=\"text\" value={task.title} onChange={(e)=>{\r\n                responseChanger({\r\n                    \"id\":task.id,\r\n                    \"title\":e.target.value,\r\n                    \"completed\":task.completed\r\n                })\r\n            }}></input>\r\n            <input type=\"button\" value=\"edit\" onClick={()=>{\r\n                fetch(`http://localhost:8000/api/edit_task/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                });\r\n            }}></input>\r\n            {completed_status}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EachTask;"]},"metadata":{},"sourceType":"module"}