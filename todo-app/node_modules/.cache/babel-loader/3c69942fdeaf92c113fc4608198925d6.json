{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saurav\\\\Desktop\\\\git projects\\\\React-django-todo-app\\\\todo_project\\\\todo-app\\\\src\\\\components\\\\EachTask.js\";\nimport React from 'react';\nimport Fetcher from '../hooks/Fetcher';\n\nfunction EachTask(props) {\n  const id = props.id;\n  const url = 'http://localhost:8000/api/get_task/' + id;\n  let [response, responseChanger] = Fetcher(url);\n  let task = response;\n\n  function EditCompletedStatus() {\n    responseChanger({\n      \"id\": task.id,\n      \"title\": task.title,\n      \"completed\": !task.completed\n    });\n    fetch(`http://localhost:8000/api/edit_task/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"id\": task.id,\n        \"title\": task.title,\n        \"completed\": !task.completed\n      })\n    });\n  }\n\n  ;\n  let completed_status;\n\n  if (task.completed) {\n    completed_status = /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: true,\n      onInput: EditCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }\n    });\n  } else {\n    completed_status = /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      unchecked: String(task.completed),\n      onInput: EditCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 26\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: task.title,\n    onChange: e => {\n      responseChanger({\n        \"id\": task.id,\n        \"title\": e.target.value,\n        \"completed\": task.completed\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"edit\",\n    onClick: () => {\n      fetch(`http://localhost:8000/api/edit_task/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), completed_status, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"delete\",\n    onClick: () => {\n      fetch(`http://localhost:8000/api/delete_task/${id}`, {\n        method: 'DELETE'\n      });\n      EachTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\n;\nexport default EachTask;","map":{"version":3,"sources":["C:/Users/Saurav/Desktop/git projects/React-django-todo-app/todo_project/todo-app/src/components/EachTask.js"],"names":["React","Fetcher","EachTask","props","id","url","response","responseChanger","task","EditCompletedStatus","title","completed","fetch","method","headers","body","JSON","stringify","completed_status","String","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Fetcher from '../hooks/Fetcher';\r\n\r\nfunction EachTask(props){\r\n    const id=props.id;\r\n    const url='http://localhost:8000/api/get_task/'+id;\r\n    let [response,responseChanger]=Fetcher(url);\r\n    let task=response;\r\n    function EditCompletedStatus(){\r\n        responseChanger({\r\n            \"id\":task.id,\r\n            \"title\":task.title,\r\n            \"completed\":!task.completed\r\n        });\r\n        fetch(`http://localhost:8000/api/edit_task/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"id\":task.id,\r\n                \"title\":task.title,\r\n                \"completed\":!task.completed\r\n            })\r\n        });\r\n    };\r\n    let completed_status;\r\n    if(task.completed){\r\n        completed_status=<input type=\"checkbox\" checked onInput={EditCompletedStatus}></input>\r\n    }else{\r\n        completed_status=<input type=\"checkbox\" unchecked={String(task.completed)} onInput={EditCompletedStatus}></input>\r\n    };\r\n    return (\r\n        <div  key={task.id} className=\"task\">\r\n            <input type=\"text\" value={task.title} onChange={(e)=>{\r\n                responseChanger({\r\n                    \"id\":task.id,\r\n                    \"title\":e.target.value,\r\n                    \"completed\":task.completed\r\n                })\r\n            }}></input>\r\n            <input type=\"button\" value=\"edit\" onClick={()=>{\r\n                fetch(`http://localhost:8000/api/edit_task/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                });\r\n            }}></input>\r\n            {completed_status}\r\n            <input type=\"button\" value=\"delete\" onClick={()=>{\r\n                fetch(`http://localhost:8000/api/delete_task/${id}`, {\r\n                    method: 'DELETE'\r\n                });\r\n                EachTask()\r\n            }}></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EachTask;"]},"metadata":{},"sourceType":"module"}